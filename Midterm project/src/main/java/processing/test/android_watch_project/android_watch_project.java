package processing.test.android_watch_project;

/* autogenerated by Processing revision 1286 on 2022-10-15 */
import android.graphics.fonts.Font;

import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.time.DayOfWeek;
import java.util.Calendar;
import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class android_watch_project extends PApplet {

 public void setup() {
  /* size commented out by preprocessor */
   fullScreen();
   frameRate(1);
   noStroke();
   smooth();
}

 public void draw() {

   Calendar rightNow = Calendar.getInstance();  // 날짜, 요일 표시
   int Day_Of_Week = rightNow.get(Calendar.DAY_OF_WEEK);
   int day = rightNow.get(Calendar.DATE);
   PFont font;

   background(0);  // 배경 (검은색)

   fill(244, 214, 188);
   textAlign(width / 2, height / 2 - 200);
   textSize(width / 35);
   text("Seconds", width / 2 - 90, height / 2 - 90);

   if (!wearAmbient()) {    // 가운데 초 정보를 표시
     fill(199, 199, 0);
     float secAng = map(second(), 0, 60, 0, 360);
     pushMatrix();
     translate(width / 2 - 90, height / 2 + 120);
     for (int i = 0; i <= secAng+1; i++) {
       if (i == 0) {
         rect(0, (width / 2 * -1) + width / 10 / 2, 0, 0, 200);
       } else {
         rect(i / 2, (width / 2 * -1) + width / 10 / 2, 2, 20, 200);
       }
     }
     popMatrix();

     fill(229, 250, 218);  // 현재 시간 정보를 받아서 둥근 모서리에 표시
     if((hour()) <= 12){
       float hour_minute = (float) (hour() * 30 + minute() * 0.5);
       float curTimeAng = map(hour_minute, 0, 720, 0, 360);
       pushMatrix();
       translate(width / 2, height / 2);
       for (float i = 0; i < curTimeAng; i+=0.5) {
         rotate(radians(1));
         circle(0, (width/2*-1) + (width/10/2/2), width/30);
       }
     }
     else{
       float hour_minute = (float) ((hour()-12) * 30 + minute() * 0.5);
       float curTimeAng = map(hour_minute, 0, 720, 0, 360);
       pushMatrix();
       translate(width / 2, height / 2);
       for (float i = 0; i < curTimeAng; i+=0.5) {
         rotate(radians(1));
         circle(0, (width/2*-1) + (width/10/2/2), width/30);
         }
     }
   }
   popMatrix();

   for (int i = 12; i > 0; i--) {    // 시계 숫자 표시
       int angle1 = 30;
       pushMatrix();
       String [] romans_number = {"0", "\u2160", "\u2161", "\u2162", "\u2163", "\u2164", "\u2165", "\u2166", "\u2167", "\u2168", "\u2169", "\u216A", "\u216B"};
       translate(width / 2 - 10, height / 2 + 10); // 숫자들의 전반적인 위치
       rotate(radians(angle1 * i));
       fill(68, 114, 148);
       translate(0, -190);
       rotate(radians(angle1 * -i));
       textSize(width / 12);
       //qtextFont(font);
       text(romans_number[i], 0, 0);
       popMatrix();
     }

     for (int j = 0; j <= 72; j++) {   // 숫자 사이 눈금 표시
       int angle2 = 5;
       pushMatrix();
       translate(width / 2, height / 2);
       rotate(radians(angle2 * j));
       if ((angle2 * j) % 30 == 0) {  // 숫자를 가리키는 눈금에는 파랑색
         fill(0, 44, 95);
         rect(0, -230, 5, 20);
         translate(0, -190);
         rotate(radians(angle2 * -j));
         popMatrix();
       } else {   // 그 외의 눈금에는 하얀색
         fill(255);
         //circle(0, -220, 5);
         rect(0, -220, 3, 10);
         translate(0, -190);
         rotate(radians(angle2 * -j));
         popMatrix();
       }
     }

     fill(244, 214, 188);     // 현재 날짜 정보를 중앙 아래에 표시
     textAlign(CENTER);
     textSize(width/30);
     text(month() + " / " + day, width/2, height/2+90);
     String weekday [] = {"0", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"};
     text(weekday[Day_Of_Week], width/2, height/2+110);

     fill(229, 250, 218);   // 현재 시각 정보를 중앙에 표시
     textAlign(CENTER);
     textSize(width/6);
     if(hour() < 10){
       text("0" + hour(), width/2-45, height/2+25);
     }
     else{
       text(hour(), width/2-45, height/2+25);
     }

     textSize(width/12);
     if (second() < 10) {   // 초와 분이 한 자리 숫자일 때
       if (minute() < 10) {
         text("0" + minute(), width/2+25, height/2-5);
         fill(199, 199, 0);
         textSize(width / 12);
         text("0" + second(), width/2+25, height/2+30);
       } else {        // 초만 한 자리 숫자일 때
         text(minute(), width/2+25, height/2-5);
         fill(199, 199, 0);
         textSize(width / 12);
         text("0" + second(), width/2+25, height/2+30);
       }
     } else {
       if (minute() < 10) {   // 분만 한 자리 숫자일 때
         text("0" + minute(), width/2+25, height/2-5);
         fill(199, 199, 0);
         textSize(width / 12);
         text(second(), width/2+25, height/2+30);
       } else {       // 초와 분 둘 다 한 자리 숫자가 아닐 때
         text(minute(), width/2+25, height/2-5);
         fill(199, 199, 0);
         textSize(width / 12);
         text(second(), width/2+25, height/2+30);
       }
     }
   }

  public void settings() { fullScreen(); }
  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "android_watch_project" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}